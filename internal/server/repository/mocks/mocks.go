// Code generated by MockGen. DO NOT EDIT.
// Source: repometrics.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	models "github.com/dmitryDevGoMid/go-service-collect-metrics/internal/server/models"
	unserialize "github.com/dmitryDevGoMid/go-service-collect-metrics/internal/server/pkg/unserialize"
	gomock "github.com/golang/mock/gomock"
)

// MockMetricsRepository is a mock of MetricsRepository interface.
type MockMetricsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsRepositoryMockRecorder
}

// MockMetricsRepositoryMockRecorder is the mock recorder for MockMetricsRepository.
type MockMetricsRepositoryMockRecorder struct {
	mock *MockMetricsRepository
}

// NewMockMetricsRepository creates a new mock instance.
func NewMockMetricsRepository(ctrl *gomock.Controller) *MockMetricsRepository {
	mock := &MockMetricsRepository{ctrl: ctrl}
	mock.recorder = &MockMetricsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsRepository) EXPECT() *MockMetricsRepositoryMockRecorder {
	return m.recorder
}

// GetAllMetrics mocks base method.
func (m *MockMetricsRepository) GetAllMetrics() (*models.MemStorage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllMetrics")
	ret0, _ := ret[0].(*models.MemStorage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllMetrics indicates an expected call of GetAllMetrics.
func (mr *MockMetricsRepositoryMockRecorder) GetAllMetrics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllMetrics", reflect.TypeOf((*MockMetricsRepository)(nil).GetAllMetrics))
}

// GetMetricCounter mocks base method.
func (m *MockMetricsRepository) GetMetricCounter(nameMetric string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetricCounter", nameMetric)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetricCounter indicates an expected call of GetMetricCounter.
func (mr *MockMetricsRepositoryMockRecorder) GetMetricCounter(nameMetric interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetricCounter", reflect.TypeOf((*MockMetricsRepository)(nil).GetMetricCounter), nameMetric)
}

// GetMetricGauge mocks base method.
func (m *MockMetricsRepository) GetMetricGauge(nameMetric string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetricGauge", nameMetric)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetricGauge indicates an expected call of GetMetricGauge.
func (mr *MockMetricsRepositoryMockRecorder) GetMetricGauge(nameMetric interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetricGauge", reflect.TypeOf((*MockMetricsRepository)(nil).GetMetricGauge), nameMetric)
}

// PingDatabase mocks base method.
func (m *MockMetricsRepository) PingDatabase() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingDatabase")
	ret0, _ := ret[0].(error)
	return ret0
}

// PingDatabase indicates an expected call of PingDatabase.
func (mr *MockMetricsRepositoryMockRecorder) PingDatabase() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingDatabase", reflect.TypeOf((*MockMetricsRepository)(nil).PingDatabase))
}

// SaveMetricsBatch mocks base method.
func (m *MockMetricsRepository) SaveMetricsBatch(metrics []unserialize.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveMetricsBatch", metrics)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveMetricsBatch indicates an expected call of SaveMetricsBatch.
func (mr *MockMetricsRepositoryMockRecorder) SaveMetricsBatch(metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveMetricsBatch", reflect.TypeOf((*MockMetricsRepository)(nil).SaveMetricsBatch), metrics)
}

// UpdateMetricCounter mocks base method.
func (m *MockMetricsRepository) UpdateMetricCounter(nameMetric string, value int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMetricCounter", nameMetric, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMetricCounter indicates an expected call of UpdateMetricCounter.
func (mr *MockMetricsRepositoryMockRecorder) UpdateMetricCounter(nameMetric, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMetricCounter", reflect.TypeOf((*MockMetricsRepository)(nil).UpdateMetricCounter), nameMetric, value)
}

// UpdateMetricGauge mocks base method.
func (m *MockMetricsRepository) UpdateMetricGauge(nameMetric string, value float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMetricGauge", nameMetric, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMetricGauge indicates an expected call of UpdateMetricGauge.
func (mr *MockMetricsRepositoryMockRecorder) UpdateMetricGauge(nameMetric, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMetricGauge", reflect.TypeOf((*MockMetricsRepository)(nil).UpdateMetricGauge), nameMetric, value)
}
